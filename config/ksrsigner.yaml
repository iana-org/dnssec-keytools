---

# example ksrsigner configuration/policy file

# per HSM PKCS#11 configuration
# module is REQUIRED, pin and env is OPTIONAL
hsm:
  softhsm:
    # path to PKCS#11 provider (shared library)
    module: /usr/local/homebrew/lib/softhsm/libsofthsm2.so
    # PIN, will be queried for if not provided
    pin: 123456
    # environment variables set when using this HSM
    env:
      SOFTHSM2_CONF: softhsm.conf
  aep:
    # path to PKCS#11 provider (shared library)
    module: /usr/local/lib/pkcs11.GCC4.0.2.so.4.07
    # PIN, will be queried for if not provided
    pin: 123456
    so_pin: 123456
    # environment variables set when using this HSM
    env:
      KEYPER_LIBRARY_PATH: /var/dnssec/ksr/AEP

# filenames for the previous SKR, the input KSR and output SKR
filenames:
  previous_skr: prev-skr.xml
  input_ksr: ksr.xml
  output_skr: skr.xml

# Inventory of key signing keys. Each key has the following properties:
#
# - description: Verbose textual description
# - label: PKCS#11 label
# - key_tag: DNSSEC key tag for the unrevoked key
# - algorithm: DNSSEC key algorithm
# - rsa_size: RSA modulues size in bits
# - rsa_exponent: RSA exponent
# - valid_from: ISO8601 timestamp of key inception
# - valid_until: ISO8601 timestamp of key expiration
# - ds_sha256: Delegation Signer SHA-256 digest (hex)
#
keys:
  ksk_current:
    description: Root DNSSEC KSK 2010
    label: Kjqmt7v
    key_tag: 19036
    algorithm: RSASHA256
    rsa_size: 2048
    rsa_exponent: 65537
    valid_from: 2010-07-15T00:00:00+00:00
    valid_until: 2019-01-11T00:00:00+00:00
    ds_sha256: 49AAC11D7B6F6446702E54A1607371607A1A41855200FD2CE1CDDE32F24E8FB5
  ksk_next:
    description: Root DNSSEC KSK 2017
    label: Klajeyz
    key_tag: 20326
    algorithm: RSASHA256
    rsa_size: 2048
    rsa_exponent: 65537
    valid_from: 2017-02-02T00:00:00+00:00
    ds_sha256: E06D44B80B8F1D39A95C0B0D7C65D08458E880409BBC683457104237C7F8EC8D


# The request policy declares acceptance critiera for incoming KSRs
request_policy:

  # Permitted domains in KSR (default is the root zone only)
  acceptable_domains:
    - "."

  # Number of bundles in KSR (default is 9)
  num_bundles: 9

  # Validate ZSK proof-of-possession (default True)
  validate_signatures: true

  # Check that the keys of a bundle match the claims in the SignaturePolicy
  keys_match_zsk_policy: true

  # Should unsupport ECDSA be accepted (default false)
  enable_unsupported_ecdsa: false

  # Check that the RSA exponent match the ZSK policy (default True)
  rsa_exponent_match_zsk_policy: true

  # Check that bundles are continuous and overlap according to policy
  # (default True)
  check_bundle_overlap: true

  # Check that the signatures in a bundle match the claims in the SignaturePolic
  # (default True)
  signature_validity_match_zsk_policy: true

  # Verify that only signature algorithms listed in the KSK operators policy
  # are used in the request and that the the signature algorithms listed in
  # the KSR policy have parameters allowed by the KSK operators policy.
  # Parameters checked are different for different algorithms.
  # (default True) 
  signature_algorithms_match_zsk_policy: true

  # Check that the keys in the bundles match the KSK operator's configured
  # policy (default True)
  check_keys_match_ksk_operator_policy: true

  # Number of keys per bundle (default [2, 1, 1, 1, 1, 1, 1, 1, 2])
  num_keys_per_bundle: [2, 1, 1, 1, 1, 1, 1, 1, 2]

  # Number of different keys in all bundles (default 3)
  num_different_keys_in_all_bundles: 3

  # Check that signatures do not expire too long into the future (default True)
  signature_check_expire_horizon: True
  signature_horizon_days: 180

  # Check the integrity of all ZSKs in the last SKR, SKR(n-1), by verifying the
  # KSK signature over each key bundle using the KSK stored in the HSM.
  check_chain_keys: True

  # Check that the requested signature inceptions/expirations in the current
  # KSR are coherent with those in the last bundle from the SKR(n-1).
  check_chain_overlap: True

  # Approved algorithms  (default RSASHA256)
  approved_algorithms:
    - RSASHA256

  # Approved RSA exponents (default [3, 65537])
  rsa_approved_exponents:
    - 3
    - 65537

  # Approved RSA modulus sizes (default 2048)
  rsa_approved_key_sizes:
    - 2048

# The response policy describes our SKR validation
response_policy:

  # Number of bundles in SKR (default is 9)
  num_bundles: 9

  # Validate KSK proof-of-possession (default True)
  validate_signatures: true


# the KSK policy describes the policy for the SKRs
# (no defaults except for signers_name)
ksk_policy:
  signers_name: .
  publish_safety: P10D
  retire_safety: P10D
  max_signature_validity: P21D
  min_signature_validity: P21D
  max_validity_overlap: P16D
  min_validity_overlap: P9D
  ttl: 172800

# SKR signature schemes where each scheme defines what key(s) signs the
# specified KSR slot, what keys are published in each slot and what keys
# are published as revoked in each slot.
#
# Examples below based on current root KSK operating procedures
#
schemas:

  # normal key bundle
  normal:
    1:
      publish: ksk_current
      sign: ksk_current
    2:
      publish: ksk_current
      sign: ksk_current
    3:
      publish: ksk_current
      sign: ksk_current
    4:
      publish: ksk_current
      sign: ksk_current
    5:
      publish: ksk_current
      sign: ksk_current
    6:
      publish: ksk_current
      sign: ksk_current
    7:
      publish: ksk_current
      sign: ksk_current
    8:
      publish: ksk_current
      sign: ksk_current
    9:
      publish: ksk_current
      sign: ksk_current

  # introduce (pre-publish) the next KSK in slot 2-9 (phase D)
  pre-publish:
    1:
      publish: ksk_current
      sign: ksk_current
    2:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    3:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    4:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    5:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    6:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    7:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    8:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    9:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current

  # roll over from the current to the next KSK (phase E)
  rollover:
    1:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    2:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    3:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    4:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    5:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    6:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    7:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    8:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    9:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next

  # published the previous KSK as revoked during slot 2-8 (phase F)
  revoke:
    1:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    2:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    3:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    4:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    5:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    6:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    7:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    8:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    9:
      publish: ksk_next
      sign: ksk_next

  # stay in publication (extend phase D)
  publish+:
    1:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    2:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    3:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    4:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    5:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    6:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    7:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    8:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current
    9:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_current

  # stay in rollover (extend phase E)
  rollover+:
    1:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    2:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    3:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    4:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    5:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    6:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    7:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    8:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next
    9:
      publish:
        - ksk_current
        - ksk_next
      sign: ksk_next

  # stay in revocation (extend phase F)
  revoke+:
    1:
      publish: ksk_next
      sign: ksk_next
    2:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    3:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    4:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    5:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    6:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    7:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    8:
      publish: ksk_next
      revoke: ksk_current
      sign:
        - ksk_current
        - ksk_next
    9:
      publish: ksk_next
      sign: ksk_next
